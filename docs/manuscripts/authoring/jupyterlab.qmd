---
title: "Authoring Manuscripts"
article-file: "index.ipynb"
template-repo: "https://github.com/cwickham/manuscript-template"
tool: 
  name: "Jupyter Lab"
  is_jupyterlab: true
  is_rstudio: false
---

{{< include ../_tool-chooser.md >}}

## Overview

On this page, we'll show you how to author an academic manuscript with Quarto in {{< meta tool.name >}}. You'll learn how to:

-   Preview your manuscript using the Quarto command line tool.

-   Add scholarly front matter to describe your article.

-   Add things like figures, tables, cross references and citations with Quarto specific markdown.

-   Include output from computations using inline code, or embedded from external notebooks.

### Is this tutorial for me?

We will assume you:

-   are comfortable using Jupyter Lab to open and edit files,
-   have a GitHub account, and are comfortable cloning a repo to your computer,
-   are comfortable navigating your file system, and executing commands in a Terminal.

## Setup

To follow along, you'll need to install the Jupyter Lab Quarto extension and clone the template repository.

::: callout-important
## Install Quarto First

If you haven't already, make sure you've installed the pre-release version of Quarto, as described in the [Manuscript Overview](../index.qmd#install).
:::

### Install the Jupyter Lab Quarto Extension

{{< include /docs/tools/_jupyter-lab-extension-install.qmd >}}

### Clone the Template Repository {#clone-repo}

To follow this tutorial you'll need your own copy of the [template repository]({{< meta template-repo >}})).

1.  Head to [GitHub to create a new repository from the template]({{< meta template-repo >}}/generate).

    Provide a "Repository Name" and make sure you check the box "Include all branches". Then "Create repository from template". ![](images/github-create-from-template.png){fig-alt="Screenshot of GitHub's create a new repo from a template page. Repository name has been filled with manuscript-template, and the box labelled Include all branches is checked."}

2.  Once your repository is created, clone it to your local computer. You can do this any way you are comfortable, but for instance in the Terminal, it might look like:

    ``` {.bash filename="Terminal"}
    git clone https://github.com/cwickham/manuscript-tutorial.git
    ```

    Where you use your own user name and repo name.

3.  You'll be working inside this directory throughout the tutorial, so if you are ready to proceed, navigate inside the directory, and start Jupyter Lab:

    ``` {.bash filename="Terminal"}
    cd manuscript-tutorial
    python3 -m jupyter lab
    ```

    ADD SCREENSHOT of Jupyterlab open with files pane open showing directory structure.

## Project Files

{{< include _files.qmd >}}

## Workflow

{{< include _workflow.qmd >}}

## Notebook Structure

The file `index.ipynb` is a Jupyter Notebook. Like any Jupyter Notebook it contains cells that could be raw, markdown or code. There are three features of this notebook that are Quarto specific:

-   The first cell contains a YAML header that is used to set document metadata, including scholarly front matter. This cell must start and end with a line of three dashes (`---`), and within these lines, content is parsed as YAML. You'll notice the cell itself is set to be a Markdown cell, this allows the Quarto Jupyter Lab Extension to visually emulate how some of these options will appear in the rendered document.

-   The other markdown cells use Quarto specific markdown syntax to include things like figures, tables, equations, cross references and citations.

-   Code cells may have special Quarto comments at the top that start with `#|`. These comments set Quarto options that control how the code and its output appear in the article.

The rest of this page walks you through the cells in this article from top to bottom, introducing you to the Quarto features you'll most likely need to write a scholarly article.

## Front Matter

{{< include _front-matter.qmd >}}

## Markdown

Markdown cells in the document will be processed by Quarto's specific markdown syntax. Quarto's markdown syntax is based on [Pandoc Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown), which in turn is based on John Gruber's [Markdown](https://daringfireball.net/projects/markdown/), the same markdown Jupyter Notebooks use. You'll find much of the syntax, for example, text formatting like bold, italics, and verbatim code, as well as headings, links and lists familiar:

{{< include _markdown.qmd >}}

::: callout-tip
## Raw and Rendered Markdown

The Quarto extension for Jupyter Lab will attempt to display markdown cells as they will appear in rendered form. To see the raw markdown, enter "Edit mode" for the cell. To return to viewing the rendered markdown, "Run" the cell.
:::

## Figures

{{< include _figures.qmd >}}

## Tables

{{< include _tables.qmd >}}

## Cross References {#cross-ref}

{{< include _cross-refs.qmd >}}

## Equations

{{< include _equations.qmd >}}

## Computations {#inline-computations}

{{< include _inline-computations.qmd >}}

## Citations

{{< include _citations.qmd >}}

## External Embeds {#embed}

{{< include _embeds.qmd >}}

## Up Next

{{< include _footer.qmd >}}
